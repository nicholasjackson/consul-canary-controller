---
apiVersion: consul-release-controller.nicholasjackson.io/v1
kind: Release
metadata:
  name: api
  namespace: default
spec:
  releaser:
    pluginName: "consul"
    config:
      consulService: "api"
#     namespace: "mynamespace"
#     partition: "mypartition"
  runtime:
    pluginName: "kubernetes"
    config:
      deployment: "api-deployment"
  strategy:
    pluginName: "canary"
    config:
      initialDelay: "30s"
      initialTraffic: 10
      interval: "30s"
      trafficStep: 20
      maxTraffic: 100
      errorThreshold: 5
      
      # Post Deployment Test executes after a deployment has been marked healthy
      # and before the initial traffic is sent to the deployment and monitoring started.
      # It is a way of actively health checking the deployment before exposing it to production
      # traffic.
      #
      # Once a deployment has been marked healthy, Consul Release Controller will
      # execute requests against the candidate deployment and monitor the results
      # using the defined monitoring queries.
      #
      # If the deployment fails to pass the monitoring queries, the deployment will
      # be rolled back and the release will be marked as failed.
      #postDeploymentTest:
      #  # The path of the API 
      #  url: /myapi
      #  # The HTTP method of the request
      #  method: POST
      #  # The payload to send with the request
      #  payload: |
      #    {
      #      "something": "something"
      #    }
      #  # The number of itterations to run the test
      #  itterations: 3
      #  # The number of seconds to wait between itterations
      #  delay: "1s"

  monitor:
    pluginName: "prometheus"
    config:
      address: "http://prometheus-kube-prometheus-prometheus.monitoring.svc:9090"
      queries:
        - name: "request-success"
          preset: "envoy-request-success"
          min: 99
        - name: "request-duration"
          preset: "envoy-request-duration"
          min: 20
          max: 200
#       - name: "mycustom"
#         min: 20
#         max: 200
#         query: |
#           histogram_quantile(
#             0.99,
#             sum(
#               rate(
#                 envoy_cluster_upstream_rq_time_bucket{
#                   namespace="{{ .Namespace }}",
#                   envoy_cluster_name="local_app",
#                   pod=~"{{ .Name }}-[0-9a-zA-Z]+(-[0-9a-zA-Z]+)"
#                 }[{{ .Interval }}]
#               )
#             ) by (le)
#           )