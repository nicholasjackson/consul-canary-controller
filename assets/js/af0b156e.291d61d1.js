"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[10],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return f}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),u=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=u(e.components);return n.createElement(i.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(t),f=o,h=m["".concat(i,".").concat(f)]||m[f]||p[f]||a;return t?n.createElement(h,s(s({ref:r},c),{},{components:t})):n.createElement(h,s({ref:r},c))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=m;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var u=2;u<a;u++)s[u]=t[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1567:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return c},default:function(){return m}});var n=t(7462),o=t(3366),a=(t(7294),t(3905)),s=["components"],l={sidebar_position:4},i="Prerequisites",u={unversionedId:"prerequisites",id:"prerequisites",title:"Prerequisites",description:"Kubernetes",source:"@site/docs/prerequisites.md",sourceDirName:".",slug:"/prerequisites",permalink:"/consul-release-controller/prerequisites",editUrl:"https://github.com/nicholasjackson/consul-release-controller/tree/main/docs/templates/shared/docs/prerequisites.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Installing the example application",permalink:"/consul-release-controller/example_app"},next:{title:"Helm values",permalink:"/consul-release-controller/helm_values"}},c=[{value:"Kubernetes",id:"kubernetes",children:[],level:2},{value:"Cert Manager",id:"cert-manager",children:[],level:2},{value:"HashiCorp Consul",id:"hashicorp-consul",children:[],level:2},{value:"Prometheus",id:"prometheus",children:[],level:2},{value:"Grafana",id:"grafana",children:[],level:2}],p={toc:c};function m(e){var r=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("h2",{id:"kubernetes"},"Kubernetes"),(0,a.kt)("p",null,"Consul Release Controller has been tested on Kubernetes version 1.21+, it may work on other versions but we\nonly plan on supporting the three most recent ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/releases/"},"Kubernetes releases"),"."),(0,a.kt)("h2",{id:"cert-manager"},"Cert Manager"),(0,a.kt)("p",null,"The Consul Release Controller secures its API and Kubernetes webhook using TLS, ",(0,a.kt)("a",{parentName:"p",href:"https://cert-manager.io/docs/"},"cert-manager"),"\nis used to create these self signed certificates."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'---\n# Source: consul-release-controller/templates/controller-cert.yaml\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: consul-release-controller-certificate\n  namespace: "default"\nspec:\n  secretName: consul-release-controller-certificate\n  dnsNames:\n  - "consul-release-controller-webhook.default.svc"\n  issuerRef:\n    name: controller-consul-release-controller-selfsigned\n---\n# Source: consul-release-controller/templates/controller-cert.yaml\napiVersion: cert-manager.io/v1\nkind: Issuer\nmetadata:\n  name: controller-consul-release-controller-selfsigned\n  namespace: "default"\nspec:\n  selfSigned: {}\n')),(0,a.kt)("p",null,"Please see the ",(0,a.kt)("a",{parentName:"p",href:"https://cert-manager.io/docs/installation/"},"cert-manager installation guide")," for details on how to setup\ncert manager for your cluster."),(0,a.kt)("h2",{id:"hashicorp-consul"},"HashiCorp Consul"),(0,a.kt)("p",null,"Consul Release Controller uses Consul Service Mesh (Connect) for the provision of metrics that are used to determine\napplication health and for ",(0,a.kt)("a",{parentName:"p",href:"https://www.consul.io/docs/connect/config-entries"},"routing features")," that enable\nprecise control over the traffic for your service."),(0,a.kt)("p",null,"Consul Release Controller requires Consul version 1.9+, but only requires the ability to interact with the Consul\nAPI. It does not matter if you have a installed Consul locally on your Kubernetes cluster using ",(0,a.kt)("a",{parentName:"p",href:"https://www.consul.io/docs/k8s/helm"},"Helm"),",\n",(0,a.kt)("a",{parentName:"p",href:"https://cloud.hashicorp.com/"},"HCP Consul"),", or if you are using an external server."),(0,a.kt)("h2",{id:"prometheus"},"Prometheus"),(0,a.kt)("p",null,"To understand the health of your application Consul Release Controller reads the metrics scraped from the Envoy proxy in Consul service\nmesh. At present the only supported time series database is ",(0,a.kt)("a",{parentName:"p",href:"https://prometheus.io/"},"Prometheus"),".  Like Consul, the Release\nController only needs to be able to access the Prometheus API, it should not matter if you are using ",(0,a.kt)("a",{parentName:"p",href:"https://grafana.com/products/cloud/"},"Grafana Cloud"),", the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/prometheus-operator/prometheus-operator"},"Prometheus operator"),"."),(0,a.kt)("h2",{id:"grafana"},"Grafana"),(0,a.kt)("p",null,"Grafana is not directly required for Consul Release Controller to function however it is incredibly useful for visualizing the\nmetrics from Prometheus."))}m.isMDXComponent=!0}}]);